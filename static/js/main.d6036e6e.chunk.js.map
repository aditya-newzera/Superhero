{"version":3,"sources":["context/userInput-context.js","components/Header/Header.js","components/SuperheroInput/SuperheroInput.js","components/Result/Result.js","App.js","serviceWorker.js","index.js"],"names":["createContext","gender","color","activity","animal","Header","react_default","a","createElement","Fragment","style","textAlign","SuperheroInput","state","colour","onChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","onClick","_event$target2","innerHTML","onSubmit","context","updateUserChoice","_this$state","this","Form","Field","Button","Group","Or","Input","list","placeholder","id","userInput_context","Consumer","disabled","float","Component","male","female","adjective","noun","Result","randomGender","output","randomAdjective","Math","floor","random","length","randomNoun","toLowerCase","trim","randomNumber","indexOf","concat","Header_Header","size","fontWeight","App","choices","Provider","className","components_SuperheroInput_SuperheroInput","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AAO,OACNvB,EAAAC,EAAAC,cAACyB,EAAA,EAAKE,OAAN,CACES,WAAY3C,GAAUa,GAAUX,GAAYC,GAC5CyC,MAAM,QACNpB,QAAS,kBAAMG,EAASC,KAH1B,qBA/GeiB,sBCAvBC,EAAO,CACX,MACA,OACA,KACA,MACA,SACA,YACA,QACA,MACA,MACA,YACA,UACA,QAGIC,EAAS,CACb,OACA,QACA,MACA,QACA,OACA,WACA,OACA,SACA,YACA,UACA,QACA,MACA,UACA,SAGIC,EAAY,CAChB,WACA,UACA,YACA,OACA,UACA,YACA,SACA,SACA,UACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,MACA,OACA,SACA,YACA,QACA,OACA,OACA,SACA,WACA,QACA,OACA,OACA,OACA,WACA,QACA,UAGIC,EAAO,CACX,SACA,QACA,UACA,UACA,OACA,SACA,WACA,UACA,QACA,YACA,QACA,UACA,OACA,QACA,QACA,QACA,YACA,OACA,OACA,QACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,UACA,OACA,SACA,SACA,QACA,SACA,OACA,QACA,UACA,UACA,QACA,UACA,OACA,QACA,OACA,SAGaC,EAAA,kBACb7C,EAAAC,EAAAC,cAACkC,EAAiBC,SAAlB,KACG,SAACd,GACA,IAEIuB,EACAC,EAHEC,EAAkBL,EAAUM,KAAKC,MAAMD,KAAKE,SAAWR,EAAUS,SACjEC,EAAaT,EAAKK,KAAKC,MAAMD,KAAKE,SAAWP,EAAKQ,SAGxD,GAAI7B,EAAQ5B,OAAQ,CAClB,GAA4C,WAAxC4B,EAAQ5B,OAAO2D,cAAcC,OAAqB,CACpD,IAAMC,EAAeP,KAAKE,SAAWT,EAAOU,OAC5CN,EAAeJ,EAAOO,KAAKC,MAAMM,IAE/BT,EADEL,EAAOe,QAAQX,IAAiB,EAC5B,GAAAY,OAAMZ,EAAN,KAAAY,OAAsBV,EAAtB,KAAAU,OAAyCL,GAEzC,GAAAK,OAAMV,EAAN,KAAAU,OAAyBL,EAAzB,KAAAK,OAAuCZ,EAAvC,SAEH,CACL,IAAMU,EAAeP,KAAKE,SAAWV,EAAKW,OAC1CN,EAAeL,EAAKQ,KAAKC,MAAMM,IAE7BT,EADES,GAAgB,EACZ,GAAAE,OAAMZ,EAAN,KAAAY,OAAsBV,EAAtB,KAAAU,OAAyCL,GAEzC,GAAAK,OAAMV,EAAN,KAAAU,OAAyBL,EAAzB,KAAAK,OAAuCZ,EAAvC,KAGV,OACE9C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEC,KAAK,OACLxD,MAAO,CAAER,MAAO,UAAWiE,WAAY,SAEtCd,GAEH/C,EAAAC,EAAAC,cAAA,qBAAaqB,EAAQ5B,QACrBK,EAAAC,EAAAC,cAAA,qBAAaqB,EAAQf,QACrBR,EAAAC,EAAAC,cAAA,uBAAeqB,EAAQ1B,UACvBG,EAAAC,EAAAC,cAAA,qBAAaqB,EAAQzB,SAI3B,OACEE,EAAAC,EAAAC,cAAA,iGCnHO4D,6MAtCbvD,MAAQ,CACNZ,OAAQ,GACRa,OAAQ,GACRX,SAAU,GACVC,OAAQ,MAGV0B,iBAAmB,SAAAuC,GAAO,OAAIhD,EAAKC,SAAS+C,4EAEnC,IAAAtC,EACsCC,KAAKnB,MAA1CZ,EADD8B,EACC9B,OAAQa,EADTiB,EACSjB,OAAQX,EADjB4B,EACiB5B,SAAUC,EAD3B2B,EAC2B3B,OAElC,OACEE,EAAAC,EAAAC,cAACkC,EAAiB4B,SAAlB,CACElD,MAAO,CACLnB,SACAa,SACAX,WACAC,SACA0B,iBAAkBE,KAAKF,mBAGzBxB,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,WACbjE,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,UACbjE,EAAAC,EAAAC,cAACH,EAAD,OAEFC,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,eACbjE,EAAAC,EAAAC,cAACgE,EAAD,OAEFlE,EAAAC,EAAAC,cAAA,OAAK+D,UAAU,gBACbjE,EAAAC,EAAAC,cAAC2C,EAAD,gBA/BML,aCKE2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d6036e6e.chunk.js","sourcesContent":["import React, { createContext } from 'react';\n\nexport default createContext({\n  gender: '',\n  color: '',\n  activity: '',\n  animal: '',\n});\n","import React from 'react';\n\nexport default () => (\n  <>\n    <h1 style={{ textAlign: 'center' }}>Superhero Generator</h1>\n  </>\n);\n","import React, { Component } from 'react';\nimport { Form, Button, Input } from 'semantic-ui-react';\nimport UserInputContext from '../../context/userInput-context';\n\nclass SuperheroInput extends Component {\n  state = {\n    gender: '',\n    colour: '',\n    activity: '',\n    animal: '',\n  };\n\n  onChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onClick = event => {\n    const { name, innerHTML } = event.target;\n    this.setState({\n      [name]: innerHTML,\n    });\n  };\n\n  onSubmit = context => {\n    context.updateUserChoice(this.state);\n    this.setState({\n      gender: '',\n      colour: '',\n      activity: '',\n      animal: '',\n    });\n  };\n\n  render() {\n    const { gender, colour, activity, animal } = this.state;\n    const { onChange, onClick, onSubmit } = this;\n\n    return (\n      <>\n        <Form>\n          <Form.Field>\n            <label style={{ color: '#fff', textAlign: 'center' }}>\n              Select a Gender\n            </label>\n            <Button.Group onClick={onClick}>\n              <Button name=\"gender\" color=\"blue\">\n                Male\n              </Button>\n              <Button.Or />\n              <Button name=\"gender\" color=\"pink\">\n                Female\n              </Button>\n            </Button.Group>\n          </Form.Field>\n          <Form.Field>\n            <label style={{ color: '#fff', textAlign: 'center' }}>\n              Favourite Color\n            </label>\n            <Button.Group onClick={onClick}>\n              <Button name=\"colour\" color=\"red\">\n                Red\n              </Button>\n              <Button name=\"colour\" color=\"orange\">\n                Orange\n              </Button>\n              <Button name=\"colour\" color=\"yellow\">\n                Yellow\n              </Button>\n              <Button name=\"colour\" color=\"green\">\n                Green\n              </Button>\n            </Button.Group>\n          </Form.Field>\n          <Form.Field>\n            <label style={{ color: '#fff', textAlign: 'center' }}>\n              Select your favourite activity\n            </label>\n            <Input\n              name=\"activity\"\n              list=\"activities\"\n              placeholder=\"Choose an activity...\"\n              value={activity}\n              onChange={onChange}\n            />\n            <datalist id=\"activities\">\n              <option value=\"Skiing\" />\n              <option value=\"Football\" />\n              <option value=\"Reading\" />\n              <option value=\"Cycling\" />\n            </datalist>\n          </Form.Field>\n          <Form.Field>\n            <label style={{ color: '#fff', textAlign: 'center' }}>\n              Select your favourite animal\n            </label>\n\n            <Input\n              name=\"animal\"\n              list=\"animals\"\n              placeholder=\"Choose an animal...\"\n              value={animal}\n              onChange={onChange}\n            />\n            <datalist id=\"animals\">\n              <option value=\"Pig\" />\n              <option value=\"Horse\" />\n              <option value=\"Dog\" />\n              <option value=\"Cat\" />\n            </datalist>\n          </Form.Field>\n          <UserInputContext.Consumer>\n            {context => (\n              <Form.Button\n                disabled={!(gender && colour && activity && animal)}\n                float=\"right\"\n                onClick={() => onSubmit(context)}\n              >\n                Submit\n              </Form.Button>\n            )}\n          </UserInputContext.Consumer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default SuperheroInput;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport UserInputContext from '../../context/userInput-context';\n\nconst male = [\n  'The',\n  'Sgt.',\n  'El',\n  'Mr.',\n  'Doctor',\n  'Professor',\n  'Agent',\n  'Boy',\n  'Man',\n  'Professor',\n  'Captain',\n  'Lord',\n];\n\nconst female = [\n  'Girl',\n  'Woman',\n  'Gal',\n  'Queen',\n  'Maid',\n  'Princess',\n  'Miss',\n  'Doctor',\n  'Professor',\n  'Captain',\n  'Agent',\n  'The',\n  'General',\n  'Queen',\n];\n\nconst adjective = [\n  'Imperial',\n  'Amazing',\n  'Spectular',\n  'Dino',\n  'Massive',\n  'Fantastic',\n  'Wonder',\n  'Techno',\n  'Electro',\n  'Hydro',\n  'Giant',\n  'Super',\n  'Incredi',\n  'Daring',\n  'Mega',\n  'Tiny',\n  'Red',\n  'Dark',\n  'Orange',\n  'Screaming',\n  'Green',\n  'Teal',\n  'Blue',\n  'Golden',\n  'Fearless',\n  'Great',\n  'Iron',\n  'Pyro',\n  'Robo',\n  'American',\n  'Cyber',\n  'Frozen',\n];\n\nconst noun = [\n  'Spider',\n  'Laser',\n  'Microbe',\n  'Spectre',\n  'Scan',\n  'Badger',\n  'Lighting',\n  'Thunder',\n  'Eagle',\n  'Hurricane',\n  'Storm',\n  'Typhoon',\n  'Fire',\n  'Flame',\n  'Flash',\n  'Night',\n  'Whirlwind',\n  'Wind',\n  'Dawn',\n  'Light',\n  'Dragon',\n  'Wolf',\n  'Vemon',\n  'Cobra',\n  'Viper',\n  'Condor',\n  'Stalker',\n  'Panther',\n  'Puma',\n  'Shadow',\n  'Freeze',\n  'Night',\n  'Hammer',\n  'Mist',\n  'Tulip',\n  'Octopus',\n  'Inferno',\n  'Magma',\n  'Patriot',\n  'Stag',\n  'Rhino',\n  'Mole',\n  'Sloth',\n];\n\nexport default () => (\n  <UserInputContext.Consumer>\n    {(context) => {\n      const randomAdjective = adjective[Math.floor(Math.random() * adjective.length)];\n      const randomNoun = noun[Math.floor(Math.random() * noun.length)];\n      let randomGender;\n      let output;\n      if (context.gender) {\n        if (context.gender.toLowerCase().trim() === 'female') {\n          const randomNumber = Math.random() * female.length;\n          randomGender = female[Math.floor(randomNumber)];\n          if (female.indexOf(randomGender) <= 6) {\n            output = `${randomGender} ${randomAdjective} ${randomNoun}`;\n          } else {\n            output = `${randomAdjective} ${randomNoun} ${randomGender} `;\n          }\n        } else {\n          const randomNumber = Math.random() * male.length;\n          randomGender = male[Math.floor(randomNumber)];\n          if (randomNumber <= 6) {\n            output = `${randomGender} ${randomAdjective} ${randomNoun}`;\n          } else {\n            output = `${randomAdjective} ${randomNoun} ${randomGender} `;\n          }\n        }\n        return (\n          <>\n            <h4>\n              <i>Your new identity is:</i>\n            </h4>\n            <Header\n              size=\"huge\"\n              style={{ color: '#0892d0', fontWeight: 'bold' }}\n            >\n              {output}\n            </Header>\n            <h5>Gender: {context.gender}</h5>\n            <h5>Colour: {context.colour}</h5>\n            <h5>Activity: {context.activity}</h5>\n            <h5>Animal: {context.animal}</h5>\n          </>\n        );\n      }\n      return (\n        <h3>\n          Please make your choices and press submit to reveal your new superhero\n          identity!\n        </h3>\n      );\n    }}\n  </UserInputContext.Consumer>\n);\n","import React, { Component } from 'react';\nimport './App.css';\nimport UserInputContext from './context/userInput-context';\nimport Header from './components/Header/Header';\nimport SuperheroInput from './components/SuperheroInput/SuperheroInput';\nimport SuperheroResult from './components/Result/Result';\n\nclass App extends Component {\n  state = {\n    gender: '',\n    colour: '',\n    activity: '',\n    animal: '',\n  };\n\n  updateUserChoice = choices => this.setState(choices);\n\n  render() {\n    const { gender, colour, activity, animal } = this.state;\n\n    return (\n      <UserInputContext.Provider\n        value={{\n          gender,\n          colour,\n          activity,\n          animal,\n          updateUserChoice: this.updateUserChoice,\n        }}\n      >\n        <div className=\"wrapper\">\n          <div className=\"header\">\n            <Header />\n          </div>\n          <div className=\"box sidebar\">\n            <SuperheroInput />\n          </div>\n          <div className=\"box sidebar2\">\n            <SuperheroResult />\n          </div>\n        </div>\n      </UserInputContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}